<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jprocesses</groupId>
    <artifactId>jProcesses</artifactId>
    <version>2.0.0</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <sonar.java.source>1.7</sonar.java.source>
    </properties>
    
    <name>jProcesses</name>
    <description>Library to manage system processes using Java</description>
    <url>https://github.com/profesorfalken/jProcesses</url>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    
    <developers>
        <developer>
            <name>Javier Garcia Alonso</name>
            <email>profesorfalken.github@gmail.com</email>
            <organization>ProfesorFalken</organization>
            <organizationUrl>http://www.profesorfalken.com</organizationUrl>
        </developer>
    </developers>
    
    <scm>
        <url>https://github.com/profesorfalken/jProcesses.git</url>
    </scm>
    
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.profesorfalken</groupId>
            <artifactId>WMI4Java</artifactId>
            <version>1.6.3</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.8.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <finalName>${project.name}</finalName> <!-- If you'd like to have version information on your output jar, remove this. -->
        <defaultGoal>clean package</defaultGoal>
        <plugins>

            <!-- Responsible for running all tests before building. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!--
            Make this jar executable.
            Remember to check the the jars entry point (main.class property above).
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            -->

            <!--
            Puts your dependencies into the output jar file.
            Normally when developing an API, that is only used by other devs
            you won't need to do this.
            But if you are developing an application for regular people,
            you should uncomment this section.
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>resource-bundles</id>
                        <phase>package</phase>
                        <goals>
                            <!-- produce source artifact for main project sources -->
                            <goal>resource-bundle</goal>

                            <!-- produce source artifact for project test sources -->
                            <goal>test-resource-bundle</goal>
                        </goals>
                        <configuration>
                            <doclint>none</doclint> <!-- Remove this, if you want to get build errors when there is an issue with a comment/documentation. -->
                            <detectOfflineLinks>false</detectOfflineLinks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <!-- Sometimes unfiltered resources cause unexpected behaviour, thus enable filtering. -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>
